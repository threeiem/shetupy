#!/usr/bin/env bash

# Globals
PY_VERSION=""

declare -A INPUT=(
  [VERSION]="3.7.3" 
  [PREFIX]="/usr/local/bin" 
)

declare -A LINE=(
  [thin]="----------------------------------------------------------------"
  [thik]="================================================================"
)



init() {
  cd "${0%/*}/../archive"
  
  if [[ -d cpython ]]; then
  
    cd cpython
  
    if [[ -f "Makefile" ]]; then
      make clean
    fi
 
    git checkout master
    git pull origin
  
  else
  
    git clone git@github.com:python/cpython.git
    cd cpython
  
  fi
  
  git fetch --tags --force

  PY_VERSION=$(git for-each-ref \
    --sort=taggerdate \
    --format '%(refname) %(taggerdate)' refs/tags\
    |cut -f1 -d\ \
    |grep -v a[0-9]$ \
    |grep -v b[0-9]$ \
    |grep -v rc[0-9]$\
    |grep ^refs/tags/v.*)
}

validateVersion() {

  if [[ "${1}" =~ ^[v][0-9].* ]]; then
    input="refs/tags/${1}"
  else
    input="refs/tags/v${1}"
  fi

  for refstags in $PY_VERSION; do

    if [ "${refstags}" == "${input}" ]; then
      echo ${refstags}
    fi

  done
}

askVersion(){

  while [ -z "${NEVER_LOGOFF}" ]; do

    read -p "What version of python?": readInput
    read -p "Use ${readInput} (y/N)" -r

    if [[ $REPLY =~ ^[Yy]$ ]]; then
      INPUT[VERSION]="${readInput}"
      break
    fi
  done

}

gather() {
  askVersion 
  version=$(validateVersion ${INPUT[VERSION]})

  if [ "${version}" == "" ]; then
    echo "FATAL: Failed to find version to install"
  else
    git checkout "${version}"
    ./configure
    make all
  fi

  #sudo make altinstall
}

echo
echo "${LINE[thik]}"
echo "Setup Python"
echo "${LINE[thik]}"

init
gather
